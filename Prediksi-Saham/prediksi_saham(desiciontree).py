# -*- coding: utf-8 -*-
"""Prediksi_saham(DesicionTree).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gJnmgmR4MDDWzN-ltzFnffehtfXxlf3j
"""

# This program uses  a Decision Tree to Predict the price stock

#import the library
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
import numpy as np
import pandas as pd
import pandas_datareader as web

#Get the Stock
df = web.DataReader('ADRO.JK', data_source='yahoo', start='2008-06-17', end='2021-04-30')
#show the data
df

#Manipulation the data
#Creat the target column
df['Price_Up'] = np.where(df['Close'].shift(-1) > df['Close'], 1, 0)
#show the data
df

# Split the data set into a feature and a target data set
X = df.iloc[:, 0:df.shape[1] -1 ].values
Y = df.iloc[:, df.shape[1] -1].values

# Split the data again to train(80%) and test (20%)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2)

#Creat and train the model (DEsicion Tree Classifier)
tree = DecisionTreeClassifier().fit(X_train, Y_train)

# Show how well the model did on the test data set
print(tree.score(X_test, Y_test))

# Show the models predictions 
tree_predictions = tree.predict(X_test)
print(tree_predictions)

#Show the actual values
Y_test